<?php

declare(strict_types=1);

namespace vyuziuk\holograms\object\elements;

use Closure;
use pocketmine\entity\Entity;
use pocketmine\level\Location;
use vyuziuk\holograms\object\Hologram;
use vyuziuk\holograms\object\HologramLine;

class InteractableHologramLine extends HologramLine
{
    /**
     * @var HiddenInteractEntity
     */
    private HiddenInteractEntity $entity;

    /**
     * @param  string  $text
     * @param  Closure|null  $onClick
     * @param  string  $message
     * @param  bool  $translate
     */
    public function __construct(
        string $text,
        public ?Closure $onClick = null,
        private string $message = "",
        bool $translate = false
    ){
        parent::__construct($text, $translate);

        $this->setType(Hologram::LINE_TYPE_INTERACTABLE);
    }

    /**
     * @param  array  $players
     * @param  Location  $location
     */
    public function send(array $players, Location $location): void
    {
        parent::send($players, $location); // TODO: Change the autogenerated stub

        $this->entity = new HiddenInteractEntity($location->getLevel(),
            Entity::createBaseNBT($location->asVector3()->add(0, 0.57)),
            $this);//0.5 is an error when you set scale for the entity.

        // spawn entity
        foreach ($players as $player) {
            $this->entity->spawnTo($player);
        }
    }

    /**
     * @param  array  $players
     */
    public function remove(array $players): void
    {
        parent::remove($players); // TODO: Change the autogenerated stub

        // remove entity too
        $this->entity->flagForDespawn();
    }

    /**
     * @return string
     */
    public function getMessage(): string
    {
        return $this->message;
    }
}